"use strict";(self.webpackChunkdocs_component_markup=self.webpackChunkdocs_component_markup||[]).push([[286],{2916:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>x,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"built_in/rainbow","title":"Rainbow","description":"Colorizes enclosed content with one continuous rainbow char-by-char, where client-rendered content","source":"@site/docs/built_in/rainbow.mdx","sourceDirName":"built_in","slug":"/built_in/rainbow","permalink":"/docs-component-markup/docs/built_in/rainbow","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"tutorialSidebar","previous":{"title":"Selector","permalink":"/docs-component-markup/docs/built_in/selector"},"next":{"title":"Gradient","permalink":"/docs-component-markup/docs/built_in/gradient"}}');var r=t(4848),l=t(8453),s=t(6025);const o={sidebar_position:12},a="Rainbow",d={},c=[{value:"Examples",id:"examples",level:2},{value:"Continuous Rainbow",id:"continuous-rainbow",level:3},{value:"Injected Color",id:"injected-color",level:3},{value:"Split Individual Rainbows",id:"split-individual-rainbows",level:3},{value:"Split Continuous Rainbow",id:"split-continuous-rainbow",level:3},{value:"Animated Split Continuous Rainbow",id:"animated-split-continuous-rainbow",level:3},{value:"Deep Rainbow",id:"deep-rainbow",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rainbow",children:"Rainbow"})}),"\n",(0,r.jsxs)(n.p,{children:["Colorizes enclosed content with one continuous rainbow char-by-char, where client-rendered content\nlike the ",(0,r.jsx)(n.a,{href:"/docs-component-markup/docs/built_in/keybind",children:"Keybind"}),"-Tag and its companions cannot, due to inherent limitations, be\nsplit up and will just be considered as an atomic unit."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Attribute"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Mandatory"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Default"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"override-colors"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"l-me: false"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Whether to override already colorized members"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"skip-whitespace"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"l-me: true"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Whether to skip whitespace when coloring"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"skip-non-text"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"l-me: false"})}),(0,r.jsxs)(n.td,{style:{textAlign:"center"},children:["Whether to skip atomic units like ",(0,r.jsx)(n.code,{children:"l-cm: <key/>"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"merge-inner"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"l-me: false"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Whether to merge inner rainbows for continuity"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"deep"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"l-me: false"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Whether to dive into children's markup-attributes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"phase"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"l-me: 0.0"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"Phase-offset of the transition; 0-100%"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"continuous-rainbow",children:"Continuous Rainbow"}),"\n",(0,r.jsx)(n.p,{children:"The simplest form of a rainbow, using all standard attribute-values."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-component-markup",children:"<rainbow>All of the fancy rainbow colors!</>\n"})}),"\n",(0,r.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/static_continuous_rainbow.png")}),"\n",(0,r.jsx)(n.h3,{id:"injected-color",children:"Injected Color"}),"\n",(0,r.jsx)(n.p,{children:"By default, colorized members will keep their style and the transition will just skip over them."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-component-markup",children:"<rainbow>All of the <red>fancy</> rainbow colors!</>\n"})}),"\n",(0,r.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/static_injected_rainbow.png")}),"\n",(0,r.jsx)(n.h3,{id:"split-individual-rainbows",children:"Split Individual Rainbows"}),"\n",(0,r.jsxs)(n.p,{children:["In the following example, the text ",(0,r.jsx)(n.code,{children:"l-me: 'hellohello-worldworld-testtest'"})," is to be colorized\nwith individual rainbows per word, having the hyphens shaded in a mere grey-tone."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-component-markup",children:"<rainbow\n  *for-word=\"'hellohello-worldworld-testtest' @ '-'\"\n  for-separator={<gray>-}\n>{{word}}</>\n"})}),"\n",(0,r.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/static_split_rainbow.png")}),"\n",(0,r.jsx)(n.p,{children:"The above could also be specified without making use of advanced features like loops and the\nexplode-operator, just like the following example portrays:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-component-markup",children:"<rainbow>hellohello</><gray>-</><rainbow>worldworld</><gray>-</><rainbow>testtest</>\n"})}),"\n",(0,r.jsx)(n.p,{children:"But the prior style allows for great flexibility when it comes to data-driven rendering, as injected monochrome\npassages may now be dynamically defined by the environment."}),"\n",(0,r.jsx)(n.h3,{id:"split-continuous-rainbow",children:"Split Continuous Rainbow"}),"\n",(0,r.jsx)(n.p,{children:"When the merge-attribute is enabled, inner rainbows will be joined in order to allow for visual continuity."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-component-markup",children:"<rainbow merge-inner=true>\n  <rainbow\n    *for-word=\"'hellohello-worldworld-testtest' @ '-'\"\n    for-separator={<gray>-}\n  >{{word}}</>\n</>\n"})}),"\n",(0,r.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/static_split_continuous_rainbow.png")}),"\n",(0,r.jsx)(n.h3,{id:"animated-split-continuous-rainbow",children:"Animated Split Continuous Rainbow"}),"\n",(0,r.jsx)(n.p,{children:"By binding the phase-offset to an environment-variable, all while altering said variable in-between calls to\nrender, animations may be created."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-component-markup",children:"<rainbow\n  merge-inner=true\n  [phase]=\"current_phase\"\n>\n  <rainbow\n    *for-word=\"'hellohello-worldworld-testtest' @ '-'\"\n    for-separator={<gray>-}\n  >{{word}}</>\n</>\n"})}),"\n",(0,r.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/animated_split_continuous_rainbow.gif")}),"\n",(0,r.jsx)(n.h3,{id:"deep-rainbow",children:"Deep Rainbow"}),"\n",(0,r.jsxs)(n.p,{children:["With the ",(0,r.jsx)(n.code,{children:"deep"}),"-flag set, The rainbow will dive into the markup-attributes of its members in specified\norder and colorize their contents (if applicable) just as well; this allows for some neat effects."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-component-markup",children:"<rainbow deep>\n  <hover-text value={and it continues here!}>The rainbow starts here</>\n</>\n"})}),"\n",(0,r.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/deep_rainbow_text.png")}),"\n",(0,r.jsx)(n.p,{children:"This feature works with an arbitrary number of attributes, so yes - crazy (and possibly useless)\ncolorization like the following works also."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-component-markup",children:'<rainbow deep>\n  <hover-item\n    material="dirt"\n    amount=3\n    name={My dirt}\n    lore={\n      First line<br/>\n      Second line<br/>\n      Third line\n    }\n  >My text</>\n'})}),"\n",(0,r.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/deep_rainbow_item.png")})]})}function x(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(6540);const r={},l=i.createContext(r);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);