"use strict";(self.webpackChunkdocs_component_markup=self.webpackChunkdocs_component_markup||[]).push([[829],{1770:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"built_in/space","title":"Space","description":"While whitespace that is wedged in-between plain text and tags will persist, as in","source":"@site/docs/built_in/space.md","sourceDirName":"built_in","slug":"/built_in/space","permalink":"/docs-component-markup/docs/built_in/space","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Linebreak","permalink":"/docs-component-markup/docs/built_in/linebreak"},"next":{"title":"Insert","permalink":"/docs-component-markup/docs/built_in/insert"}}');var t=s(4848),i=s(8453);const r={sidebar_position:8},c="Space",l={},o=[];function d(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"space",children:"Space"})}),"\n",(0,t.jsx)(n.p,{children:"While whitespace that is wedged in-between plain text and tags will persist, as in"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-component-markup",children:"this text <red>\n  is newline-separated\n"})}),"\n",(0,t.jsx)(n.p,{children:"becoming"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-component-markup",children:"this text <red>is newline-separated\n"})}),"\n",(0,t.jsx)(n.p,{children:"leading whitespace (i.e. indentation) as well as trailing whitespace gets removed unconditionally."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-component-markup",children:"this text \n  is newline-separated\n"})}),"\n",(0,t.jsx)(n.p,{children:"becomes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-component-markup",children:"this textis newline-separated\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If a single space is to be introduced at the end- or the beginning of a line, use the explicit ",(0,t.jsx)(n.code,{children:"<space/>"}),"\ntag, such that"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-component-markup",children:"this text<space/>\n  is newline-separated\n"})}),"\n",(0,t.jsx)(n.p,{children:"becomes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-component-markup",children:"this text is newline-separated\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"<space/>"})," tag acts as a mere placeholder and does not bear any content - it must be self-closing. Should\nthe case ever arise that more than one space are to be inserted, consider using the ",(0,t.jsx)(n.a,{href:"../expression_syntax#repeat-operator",children:"Repeat Operator"}),", as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-component-markup",children:'this text{" " ** 5}\n  is newline-separated\n'})}),"\n",(0,t.jsx)(n.p,{children:"will become"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-component-markup",children:"this text     is newline-separated\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);