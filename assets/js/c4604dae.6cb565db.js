"use strict";(self.webpackChunkdocs_component_markup=self.webpackChunkdocs_component_markup||[]).push([[338],{985:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"platform_api","title":"Platform API","description":"This project remains entirely platform-agnostic by working with externally provided implementations of","source":"@site/docs/platform_api.mdx","sourceDirName":".","slug":"/platform_api","permalink":"/docs-component-markup/docs/platform_api","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Extension API","permalink":"/docs-component-markup/docs/extension_api"},"next":{"title":"Consumer API","permalink":"/docs-component-markup/docs/consumer_api"}}');var r=t(4848),i=t(8453);const a={sidebar_position:4},c="Platform API",l={},s=[{value:"Component-Constructor",id:"component-constructor",level:2},{value:"Deferred Data-Provider",id:"deferred-data-provider",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"platform-api",children:"Platform API"})}),"\n",(0,r.jsx)(n.p,{children:"This project remains entirely platform-agnostic by working with externally provided implementations of\nthe platform-API, which comes with many benefits, such as the fact that no intermediate representation\nand thus no conversions are necessary - also, proper automated testing can be conducted using independent\nmocks."}),"\n",(0,r.jsx)(n.h2,{id:"component-constructor",children:"Component-Constructor"}),"\n",(0,r.jsx)(n.p,{children:"In order to construct- and interact with components native to the platform at hand, the\ncomponent-constructor offers various endpoints, allowing the system to unfold the full\nset of features with just a few basic necessities provided."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public interface ComponentConstructor {\n\n  // ================================================================================\n  // SlotContext\n  // ================================================================================\n\n  SlotContext getSlotContext(SlotType slot);\n\n  // ================================================================================\n  // TerminalNode\n  // ================================================================================\n\n  Object createTextComponent(String text);\n\n  Object createKeyComponent(String key);\n\n  Object createTranslateComponent(String key, List<Object> with, @Nullable String fallback);\n\n  DeferredComponent createDeferredComponent(\n    DeferredRenderer<?> renderer,\n    RendererParameter parameter,\n    InterpretationEnvironment environmentSnapshot,\n    SlotContext slotContext\n  );\n\n  // ================================================================================\n  // Click-Action\n  // ================================================================================\n\n  void setClickChangePageAction(Object component, String value);\n\n  void setClickCopyToClipboardAction(Object component, String value);\n\n  void setClickOpenFileAction(Object component, String value);\n\n  void setClickOpenUrlAction(Object component, URI value);\n\n  void setClickRunCommandAction(Object component, String value);\n\n  void setClickSuggestCommandAction(Object component, String value);\n\n  // ================================================================================\n  // Hover-Action\n  // ================================================================================\n\n  void setHoverItemAction(\n    Object component,\n    @Nullable String material,\n    @Nullable Integer count,\n    @Nullable Object name,\n    @Nullable List<Object> lore,\n    boolean hideProperties\n  );\n\n  void setHoverTextAction(Object component, Object text);\n\n  void setHoverEntityAction(Object component, String type, UUID id, @Nullable Object name);\n\n  // ================================================================================\n  // Insert-Action\n  // ================================================================================\n\n  void setInsertAction(Object component, String value);\n\n  // ================================================================================\n  // Styling\n  // ================================================================================\n\n  void setColor(Object component, long packedColor);\n\n  void setShadowColor(Object component, long packedColor);\n\n  void setFont(Object component, @Nullable String font);\n\n  void setObfuscatedFormat(Object component, TriState value);\n\n  void setBoldFormat(Object component, TriState value);\n\n  void setStrikethroughFormat(Object component, TriState value);\n\n  void setUnderlinedFormat(Object component, TriState value);\n\n  void setItalicFormat(Object component, TriState value);\n\n  // ================================================================================\n  // Members\n  // ================================================================================\n\n  /**\n   * @return Non-null value (component; either equal to input or clone if that was necessary\n   * or more efficient to swap out the members via) iif the slot was valid on this component\n   */\n  @Nullable Object setMembers(Object component, MembersSlot slot, @Nullable List<Object> children);\n\n  /**\n   * @return Non-null value iif the slot was valid on this component\n   */\n  @Nullable List<Object> getMembers(Object component, MembersSlot slot);\n\n  /**\n   * Creates a shallow copy of the given component which also copies all member-lists\n   * such that they can be safely manipulated.\n   */\n  Object shallowCopyIncludingMemberLists(Object component);\n\n  // ================================================================================\n  // Miscellaneous\n  // ================================================================================\n\n  DeferredDataProvider getDataProvider();\n\n  String stripToPlainText(Object component);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"deferred-data-provider",children:"Deferred Data-Provider"}),"\n",(0,r.jsx)(n.p,{children:"In order to evaluate deferred components which are tailored to a specific receiver, the\ndata-provider again implements platform-specific versions to call into."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public interface DeferredDataProvider {\n\n  String getName(@NotNull Object recipient);\n\n  String getDisplayName(@NotNull Object recipient);\n\n  // TODO: NBT data access, selector execution, etc.\n\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);