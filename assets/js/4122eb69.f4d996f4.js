"use strict";(self.webpackChunkdocs_component_markup=self.webpackChunkdocs_component_markup||[]).push([[336],{8957:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"built_in/duration","title":"Duration","description":"Overview","source":"@site/docs/built_in/duration.mdx","sourceDirName":"built_in","slug":"/built_in/duration","permalink":"/docs-component-markup/docs/built_in/duration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":18,"frontMatter":{"sidebar_position":18},"sidebar":"tutorialSidebar","previous":{"title":"Date","permalink":"/docs-component-markup/docs/built_in/date"},"next":{"title":"Player-Name","permalink":"/docs-component-markup/docs/built_in/player_name"}}');var i=t(4848),s=t(8453),l=t(1119),r=t(7420);t(6025);const o={sidebar_position:18},u="Duration",d={},c=[{value:"Overview",id:"overview",level:2},{value:"Examples",id:"examples",level:2},{value:"Default Style",id:"default-style",level:3},{value:"Custom Style",id:"custom-style",level:3}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"duration",children:"Duration"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"Formats a given duration in milliseconds based on various additional hints, such that its appearance becomes aligned with the desired scheme."}),"\n",(0,i.jsx)(l.J,{tag:{name:"duration",aliases:[],selfClosing:!0,attributes:[{name:"value",aliases:[],description:"Duration in milliseconds",fallback:null,multiValue:!1,type:r.j.NUMBER},{name:"units",aliases:[],description:["Units to format the duration into; available units:","i: milliseconds","s: seconds","m: minutes","h: hours","d: days","M: months","y: years"],fallback:null,multiValue:!1,type:r.j.STRING},{name:"unit-renderer",aliases:[],description:["Renderer called for each displayed unit; introduces:","- value: Long",'- unit: String (e.g. "i", "s", etc.)'],fallback:"null",multiValue:!1,type:r.j.MARKUP},{name:"separator",aliases:[],description:"Separator in-between units",fallback:"null",multiValue:!1,type:r.j.MARKUP},{name:"zeroes",aliases:[],description:"Whether to show units of value zero",fallback:"false",multiValue:!1,type:r.j.STRING}]}}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"default-style",children:"Default Style"}),"\n",(0,i.jsx)(n.p,{children:"When just supplying a value as well as some units to format into, the default style will be plain but efficient:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-!component-markup",children:'My duration: <&b><duration\n  [value]="(31 + 60*3 + 60*60*8) * 1000"\n  units="hms"\n/>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-style",children:"Custom Style"}),"\n",(0,i.jsx)(n.p,{children:"As to really show what's possible, let's not just render different unit-suffixes, but also account for singular/plural differentiation, color groups based on their unit and add a colored separator."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-!component-markup",children:'My duration: <duration\n  [value]="(38 + 60 + 60*60*2) * 1000"\n  units="smh"\n  separator={<&8>,<space/>}\n  unit-renderer={\n    <container *when="unit">\n      <&c +is="h">{value} hour{value neq 1 then \'s\'}</>\n      <&a +is="m">{value} minute{value neq 1 then \'s\'}</>\n      <&b +is="s">{value} second{value neq 1 then \'s\'}</>\n  }\n/>\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);