"use strict";(self.webpackChunkdocs_component_markup=self.webpackChunkdocs_component_markup||[]).push([[566],{2858:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>x,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"built_in/gradient","title":"Gradient","description":"Colorizes enclosed content with one continuous gradient char-by-char, where client-rendered content","source":"@site/docs/built_in/gradient.mdx","sourceDirName":"built_in","slug":"/built_in/gradient","permalink":"/docs-component-markup/docs/built_in/gradient","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"Rainbow","permalink":"/docs-component-markup/docs/built_in/rainbow"},"next":{"title":"Transition","permalink":"/docs-component-markup/docs/built_in/transition"}}');var i=t(4848),l=t(8453),s=t(6025);const o={sidebar_position:13},c="Gradient",d={},a=[{value:"Examples",id:"examples",level:2},{value:"Two Color Gradient",id:"two-color-gradient",level:3},{value:"Three Color Gradient",id:"three-color-gradient",level:3},{value:"Variable Phase Gradient",id:"variable-phase-gradient",level:3},{value:"Variable Offset Gradient",id:"variable-offset-gradient",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"gradient",children:"Gradient"})}),"\n",(0,i.jsxs)(n.p,{children:["Colorizes enclosed content with one continuous gradient char-by-char, where client-rendered content\nlike the ",(0,i.jsx)(n.a,{href:"/docs-component-markup/docs/built_in/keybind",children:"Keybind"}),"-Tag and its companions cannot, due to inherent limitations, be\nsplit up and will just be considered as an atomic unit. Check out the examples regarding common attributes\nover at the ",(0,i.jsx)(n.a,{href:"/docs-component-markup/docs/built_in/rainbow",children:"Rainbow"}),"-Tag, as they behave exactly the same and their documentation is\ntherefore kept centrally."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"center"},children:"Attribute"}),(0,i.jsx)(n.th,{style:{textAlign:"center"},children:"Type"}),(0,i.jsx)(n.th,{style:{textAlign:"center"},children:"Mandatory"}),(0,i.jsx)(n.th,{style:{textAlign:"center"},children:"Default"}),(0,i.jsx)(n.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"color"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Multi-Scalar"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"l-me: null"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Colors to be used within the gradient"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"offset"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Multi-Scalar"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"l-me: null"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Offsets at which the colors lie; 0-100%"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"z-index"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Multi-Scalar"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"l-me: 0"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Z-indices of the color-points"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"override-colors"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"l-me: false"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Whether to override already colorized members"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"skip-whitespace"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"l-me: true"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Whether to skip whitespace when coloring"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"skip-non-text"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"l-me: false"})}),(0,i.jsxs)(n.td,{style:{textAlign:"center"},children:["Whether to skip atomic units like ",(0,i.jsx)(n.code,{children:"l-cm: <key/>"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"merge-inner"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"l-me: false"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Whether to merge inner gradients for continuity"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"deep"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"l-me: false"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Whether to dive into children's markup-attributes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"phase"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Scalar"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"no"}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"l-me: 0.0"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"Phase-offset of the transition; 0-100%"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["When specifying ",(0,i.jsx)(n.code,{children:"color"}),"-points on the gradient, simply specify them one each per attribute"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-component-markup",children:'<gradient\n  color="red"\n  color="blue"\n  color="green"\n>All of the fancy gradient colors!</>\n'})}),"\n",(0,i.jsx)(n.p,{children:"or employ the spread-operator in order to bind a dynamic list of items"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-component-markup",children:"<gradient\n  [...color]=\"['red', 'blue', 'green']\"\n>All of the fancy gradient colors!</>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When not specifying any ",(0,i.jsx)(n.code,{children:"offset"}),"-values, colors will simply be spaced equidistant automatically. When specifying\nless offsets than colors, the provided entries are sorted ascendingly and clamped to an interval between 0 and 100;\nthe remaining distance, if any, will be shared equidistant amongst the remaining colors. Usually though, one either\nspecifies no offsets, or all of them, for fine-grained control. For manually specified gradients, it is recommended\nto specify ",(0,i.jsx)(n.code,{children:"color"}),"- and ",(0,i.jsx)(n.code,{children:"offset"}),"-values in an alternating manner to increase readability."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-component-markup",children:'<gradient\n  color="red"\n  offset=0\n  color="blue"\n  offset=25.2\n  color="green"\n  offset=70.5\n  color="gold"\n  offset=100\n>All of the fancy gradient colors!</>\n'})}),"\n",(0,i.jsx)(n.p,{children:"When specifying dynamic templates with full control, simply mark both attributes by the spread-operator and\npass one list each using the environment."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-component-markup",children:'<gradient\n  [...color]="my_colors"\n  [...offset]="my_offsets"\n>All of the fancy gradient colors!</>\n'})}),"\n",(0,i.jsx)(n.p,{children:"When it comes to z-indices, they too are assigned one-by-one to colors, meaning that if one wants to specify\nthe third index, the prior two values need to be specified also, in order to avoid being erroneously assigned\nto the first. In general, it is advised to always specify the used attribute at hand for all color-points or\nfor none, as to avoid confusion."}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"two-color-gradient",children:"Two Color Gradient"}),"\n",(0,i.jsx)(n.p,{children:"The simplest form of a gradient is that between two colors."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-component-markup",children:'<gradient\n  color="red"\n  color="blue"\n>All of the fancy gradient colors!</>\n'})}),"\n",(0,i.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/two_color_gradient.png")}),"\n",(0,i.jsx)(n.h3,{id:"three-color-gradient",children:"Three Color Gradient"}),"\n",(0,i.jsx)(n.p,{children:"By adding another color, the offsets along the gradient will be automatically balanced if not specified otherwise."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-component-markup",children:'<gradient\n  color="red"\n  color="yellow"\n  color="blue"\n>All of the fancy gradient colors!</>\n'})}),"\n",(0,i.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/three_color_gradient.png")}),"\n",(0,i.jsx)(n.h3,{id:"variable-phase-gradient",children:"Variable Phase Gradient"}),"\n",(0,i.jsx)(n.p,{children:"By binding the phase-offset to an environment-variable, all while altering said variable in-between calls to\nrender, animations may be created."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-component-markup",children:'<gradient\n  [phase]="current_phase"\n  color="red"\n  color="yellow"\n  color="blue"\n>All of the fancy gradient colors!</>\n'})}),"\n",(0,i.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/variable_phase_gradient.gif")}),"\n",(0,i.jsx)(n.h3,{id:"variable-offset-gradient",children:"Variable Offset Gradient"}),"\n",(0,i.jsxs)(n.p,{children:["If instead of shifting the whole gradient, just a single point (or multiple points, for that matter) on it is to be\nmoved, simply bind the corresponding offset(s) to altering environment-variables. It is highly advised to now\nalso employ the ",(0,i.jsx)(n.code,{children:"z-index"})," attribute as to ensure that the moving point(s) take precedence all along the gradient\nin order to avoid visual glitches."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-component-markup",children:'<gradient\n  color="red"\n  offset=0\n  z-index=0\n  color="yellow"\n  [offset]="current_phase"\n  z-index=1\n  color="blue"\n  offset=100\n  z-index=0\n>All of the fancy gradient colors!</>\n'})}),"\n",(0,i.jsx)("img",{className:"rendered-image",src:(0,s.Ay)("/img/variable_offset_gradient.gif")})]})}function x(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(6540);const i={},l=r.createContext(i);function s(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);