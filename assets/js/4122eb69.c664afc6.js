"use strict";(self.webpackChunkdocs_component_markup=self.webpackChunkdocs_component_markup||[]).push([[336],{8957:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>u,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"built_in/duration","title":"Duration","description":"Overview","source":"@site/docs/built_in/duration.mdx","sourceDirName":"built_in","slug":"/built_in/duration","permalink":"/docs-component-markup/docs/built_in/duration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":18,"frontMatter":{"sidebar_position":18},"sidebar":"tutorialSidebar","previous":{"title":"Date","permalink":"/docs-component-markup/docs/built_in/date"}}');var s=a(4848),t=a(8453),l=a(1119),r=a(7420),o=a(6025);const u={sidebar_position:18},d="Duration",c={},m=[{value:"Overview",id:"overview",level:2},{value:"Examples",id:"examples",level:2},{value:"Default Style",id:"default-style",level:3},{value:"Custom Style",id:"custom-style",level:3}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"duration",children:"Duration"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Formats a given duration in milliseconds based on various additional hints, such that its appearance becomes aligned with the desired scheme."}),"\n",(0,s.jsx)(l.J,{tag:{name:"duration",aliases:[],selfClosing:!0,attributes:[{name:"value",aliases:[],description:"Duration in milliseconds",fallback:null,multiValue:!1,type:r.j.NUMBER},{name:"units",aliases:[],description:["Units to format the duration into; available units:","i: milliseconds","s: seconds","m: minutes","h: hours","d: days","M: months","y: years"],fallback:null,multiValue:!1,type:r.j.STRING},{name:"unit-renderer",aliases:[],description:["Renderer called for each displayed unit; introduces:","- value: Long",'- unit: String (e.g. "i", "s", etc.)'],fallback:"null",multiValue:!1,type:r.j.MARKUP},{name:"separator",aliases:[],description:"Separator in-between units",fallback:"null",multiValue:!1,type:r.j.MARKUP},{name:"zeroes",aliases:[],description:"Whether to show units of value zero",fallback:"false",multiValue:!1,type:r.j.STRING}]}}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"default-style",children:"Default Style"}),"\n",(0,s.jsx)(n.p,{children:"When just supplying a value as well as some units to format into, the default style will be plain but efficient:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-component-markup",children:'My duration: <&b><duration\n  [value]="(31 + 60*3 + 60*60*8) * 1000"\n  units="hms"\n/>\n'})}),"\n",(0,s.jsx)("img",{className:"rendered-image",src:(0,o.Ay)("/img/duration_default.png")}),"\n",(0,s.jsx)(n.h3,{id:"custom-style",children:"Custom Style"}),"\n",(0,s.jsx)(n.p,{children:"As to really show what's possible, let's not just render different unit-suffixes, but also account for singular/plural differentiation, color groups based on their unit and add a colored separator."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-component-markup",children:'My duration: <duration\n  [value]="(38 + 60 + 60*60*2) * 1000"\n  units="smh"\n  separator={<&8>,<space/>}\n  unit-renderer={\n    <container *when="unit">\n      <&c +is="h">{value} hour{value != 1 ? \'s\'}</>\n      <&a +is="m">{value} minute{value != 1 ? \'s\'}</>\n      <&b +is="s">{value} second{value != 1 ? \'s\'}</>\n  }\n/>\n'})}),"\n",(0,s.jsx)("img",{className:"rendered-image",src:(0,o.Ay)("/img/duration_styled.png")})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);