"use strict";(self.webpackChunkdocs_component_markup=self.webpackChunkdocs_component_markup||[]).push([[255],{3106:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"types","title":"Types","description":"In general, tags only statically differentiate between two types: expression and markup. If an expression is assigned to a markup-attribute or vice-versa, parsing will fail as to protect the user from errors during interpretation. All expression-values are interpreted however the tag at hand see fit, with proper fallbacks and console-logs, such that no functionality-inhibitative error may ever occur.","source":"@site/docs/types.mdx","sourceDirName":".","slug":"/types","permalink":"/docs-component-markup/docs/types","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Consumer API","permalink":"/docs-component-markup/docs/consumer_api"},"next":{"title":"Built-In Tags","permalink":"/docs-component-markup/docs/category/built-in-tags"}}');var n=t(4848),i=t(8453),o=t(1119),a=t(7420);const l={sidebar_position:6},p="Types",c={},d=[{value:"Markup",id:"markup",level:2},{value:"String",id:"string",level:2},{value:"Color",id:"color",level:2},{value:"Boolean",id:"boolean",level:2},{value:"Number",id:"number",level:2},{value:"Coordinates",id:"coordinates",level:2},{value:"Selector",id:"selector",level:2}];function h(e){const r={h1:"h1",h2:"h2",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"types",children:"Types"})}),"\n",(0,n.jsx)(r.p,{children:"In general, tags only statically differentiate between two types: expression and markup. If an expression is assigned to a markup-attribute or vice-versa, parsing will fail as to protect the user from errors during interpretation. All expression-values are interpreted however the tag at hand see fit, with proper fallbacks and console-logs, such that no functionality-inhibitative error may ever occur."}),"\n",(0,n.jsx)(r.p,{children:"TODO: Properly document the following types."}),"\n",(0,n.jsx)(r.h2,{id:"markup",children:"Markup"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(o.H,{type:a.j.MARKUP})," type..."]}),"\n",(0,n.jsx)(r.h2,{id:"string",children:"String"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(o.H,{type:a.j.STRING})," type..."]}),"\n",(0,n.jsx)(r.h2,{id:"color",children:"Color"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(o.H,{type:a.j.COLOR})," type..."]}),"\n",(0,n.jsx)(r.h2,{id:"boolean",children:"Boolean"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(o.H,{type:a.j.BOOLEAN})," type..."]}),"\n",(0,n.jsx)(r.h2,{id:"number",children:"Number"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(o.H,{type:a.j.NUMBER})," type..."]}),"\n",(0,n.jsx)(r.h2,{id:"coordinates",children:"Coordinates"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(o.H,{type:a.j.COORDINATES})," type..."]}),"\n",(0,n.jsx)(r.h2,{id:"selector",children:"Selector"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(o.H,{type:a.j.SELECTOR})," type..."]})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);